= Getting Started with VIATRA
ifdef::env-github,env-browser[:outfilesuffix: .adoc]
:rootdir: .
:imagesdir: {rootdir}/images
ifndef::source-highlighter[:source-highlighter: highlightjs]
ifndef::highlightjsdir[:highlightjsdir: {rootdir}/highlight.js]
ifndef::highlightjs-theme[:highlightjs-theme: foundation]
:toclevels: 2
:toc:
:toc2:
:numbered:
:icons: font
:chapterdir: .
:sectnums:
:sectnumlevels: 4
:experimental:
:sectlinks:


:chapterdir: .
== Introduction
This document contains a tutorial for getting started with the query and transformation development in VIATRA.

The tutorial relies on the CPS Demonstrator application from https://github.com/viatra/viatra-docs/blob/master/cps/Home.adoc. The CPS Demonstrator is specified to cover a usual workflow in Model-driven Engineering, where a system is (1) first described in a source model, then (2) automated model-to-model transformations are used to derive a target model. Finally, (3) model-to-text transformation is performed to generate code from the target domain. In addition, a model generator that can automatically create source domain models can support the correctness testing and performance evaluation of the components.

This tutorial uses only a subset of the transformation problem, as its main goal is to illustrate the basics of the VIATRA environment; while a few additional steps were added to illustrate additional capabilities of the framework. Consult the original demonstrator for a more complex transformation example. Furthermore, we expect readers to be familiar with the basics of Eclipse plug-in development, more specifically creating plug-in projects and defining basic UI extensions such as commands. If required, consult the Plug-in development tutorial at http://www.vogella.com/tutorials/EclipsePlugIn/article.html

This document starts with a <<environment,quick setup guide>>, then describes model <<_query_development,query development>>. Both <<_batch_transformations,batch>> and <<_event_driven_transformations,event-driven transformations>> are covered later. Finally, a few <<_advanced_features,advanced features>> such as the <<_viatra_evm_barebone,API of the event-driven virtual machine>> or <<_displaying_query_results_in_the_user_interface,UI integration support>> is introduced shortly.

The source of this tutorial is written in AsciiDoc and is available at https://github.com/viatra/viatra-docs Contributions are welcome! If you find any mistakes or outdated informations, please open an link:https://github.com/viatra/viatra-docs/issues/new[issue].

<<<
include::{chapterdir}/Tutorial-environment.adoc[leveloffset=+1]

<<<
include::{chapterdir}/Viatra-query-lab.adoc[leveloffset=+1]

<<<
== Model Transformation Development
include::{chapterdir}/Viatra-batch-transformations.adoc[leveloffset=+2]

<<<
include::{chapterdir}/Viatra-incremental-transformations.adoc[leveloffset=+2]

<<<
== Advanced Features
:chapterdir: extra

include::{chapterdir}/Derived-features.adoc[leveloffset=+2]

<<<
include::{chapterdir}/Metamodeling-with-UML-profiles.adoc[leveloffset=+2]

<<<
include::{chapterdir}/Querying-and-transforming-UML-profile-applications.adoc[leveloffset=+2]

<<<
include::{chapterdir}/VIATRA-debugger.adoc[leveloffset=+2]

<<<
include::{chapterdir}/VIATRA-EVM-barebone.adoc[leveloffset=+2]

<<<
include::{chapterdir}/VIATRA-Query-API.adoc[leveloffset=+2]

<<<
include::{chapterdir}/VIATRA-visualization.adoc[leveloffset=+2]
